plugins {
    id 'java'
    id 'java-library'
    id 'application'
    id 'org.springframework.boot' version '2.6.7'
}

wrapper.enabled(false)

group 'com.xy-char'
version '1.0.1'

compileJava {
    options.release = 8
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'net.bytebuddy:byte-buddy:1.12.9'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'org.springframework:spring-context:5.2.8.RELEASE'
    implementation 'org.springframework:spring-jdbc:5.2.8.RELEASE'
    implementation 'org.springframework:spring-tx:5.2.8.RELEASE'

    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-log4j2:1.5.1'
    // implementation 'software.amazon.awssdk:aws-sdk-java:2.17.175'

    implementation 'org.mybatis.dynamic-sql:mybatis-dynamic-sql:1.4.0'
    implementation 'commons-dbutils:commons-dbutils:1.7'
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.jayway.jsonpath:json-path:2.7.0'

    implementation 'info.picocli:picocli:4.6.3'
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

compileJava {
    options.compilerArgs << "-Xlint:unchecked"
    options.compilerArgs << "-Xlint:deprecation"
}

test {
    useJUnitPlatform()
}

bootJar {
    mainClassName = 'com.xychar.stateful.bootstrap.DriverTest1'
}

application {
    mainClass = 'com.xychar.stateful.bootstrap.DriverTest1'
    // applicationDefaultJvmArgs = ['-Dlog4j.configDebug=true']
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}